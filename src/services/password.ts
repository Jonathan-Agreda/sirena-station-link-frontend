import api from "@/lib/api";
import {
  ForgotPasswordSchema,
  ResetPasswordSchema, // 游녣 Se a침ade el import que falta
} from "@/lib/validators";
import { z } from "zod";

/**
 * Cambio de contrase침a manual (usuario autenticado).
 * Esta funci칩n se mantiene intacta.
 */
export async function changePasswordManual(
  currentPassword: string,
  newPassword: string
): Promise<{ message: string }> {
  const { data } = await api.post("/auth/change-password/web", {
    currentPassword,
    newPassword,
  });
  return data as { message: string };
}

/**
 * Solicita el enlace de restablecimiento de contrase침a para un email.
 * Esta funci칩n tambi칠n se mantiene intacta.
 */
export async function requestPasswordReset(
  values: z.infer<typeof ForgotPasswordSchema>
): Promise<{ message: string }> {
  const { data } = await api.post("/auth/forgot-password", values);
  return data as { message: string };
}

/**
 * 游녢 NUEVA FUNCI칍N A칌ADIDA
 * Env칤a el token y la nueva contrase침a al backend para completar el reseteo.
 */
export async function resetPassword(
  values: z.infer<typeof ResetPasswordSchema>
): Promise<{ message: string }> {
  const { data } = await api.post("/auth/reset-password", values);
  return data as { message: string };
}
